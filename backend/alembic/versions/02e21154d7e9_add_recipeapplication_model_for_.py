"""Add RecipeApplication model for Environment & Recipes functionality

Revision ID: 02e21154d7e9
Revises: b1f075ab897b
Create Date: 2025-09-08 01:22:18.028530

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '02e21154d7e9'
down_revision: Union[str, None] = 'b1f075ab897b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recipe_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=False),
    sa.Column('recipe_version_id', sa.Integer(), nullable=False),
    sa.Column('applied_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('applied_by', sa.String(), nullable=False),
    sa.Column('previous_recipe_version_id', sa.Integer(), nullable=True),
    sa.Column('changes_summary', sa.JSON(), nullable=True),
    sa.Column('environment_sync_status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.ForeignKeyConstraint(['previous_recipe_version_id'], ['recipe_versions.id'], ),
    sa.ForeignKeyConstraint(['recipe_version_id'], ['recipe_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recipe_applications_container_id'), 'recipe_applications', ['container_id'], unique=False)
    op.create_index(op.f('ix_recipe_applications_id'), 'recipe_applications', ['id'], unique=False)
    op.create_index(op.f('ix_recipe_applications_previous_recipe_version_id'), 'recipe_applications', ['previous_recipe_version_id'], unique=False)
    op.create_index(op.f('ix_recipe_applications_recipe_version_id'), 'recipe_applications', ['recipe_version_id'], unique=False)
    op.drop_index(op.f('ix_activity_logs_container_timestamp'), table_name='activity_logs')
    op.drop_index(op.f('ix_activity_logs_timestamp'), table_name='activity_logs')
    op.drop_index(op.f('ix_alerts_active'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_container_active'), table_name='alerts')
    op.drop_index(op.f('ix_container_snapshots_timestamp'), table_name='container_snapshots')
    op.drop_index(op.f('ix_containers_status'), table_name='containers')
    op.drop_index(op.f('ix_containers_type'), table_name='containers')
    op.drop_index(op.f('ix_crops_lifecycle_status'), table_name='crops')
    op.drop_index(op.f('ix_devices_container_status'), table_name='devices')
    op.drop_index(op.f('ix_devices_status'), table_name='devices')
    op.drop_index(op.f('ix_metric_snapshots_container_timestamp'), table_name='metric_snapshots')
    op.drop_index(op.f('ix_metric_snapshots_timestamp'), table_name='metric_snapshots')
    op.drop_index(op.f('ix_panels_status'), table_name='panels')
    op.drop_column('seed_types', 'created_at')
    op.drop_column('seed_types', 'updated_at')
    op.drop_index(op.f('ix_trays_status'), table_name='trays')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_trays_status'), 'trays', ['status'], unique=False)
    op.add_column('seed_types', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('seed_types', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_panels_status'), 'panels', ['status'], unique=False)
    op.create_index(op.f('ix_metric_snapshots_timestamp'), 'metric_snapshots', ['timestamp'], unique=False)
    op.create_index(op.f('ix_metric_snapshots_container_timestamp'), 'metric_snapshots', ['container_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_devices_status'), 'devices', ['status'], unique=False)
    op.create_index(op.f('ix_devices_container_status'), 'devices', ['container_id', 'status'], unique=False)
    op.create_index(op.f('ix_crops_lifecycle_status'), 'crops', ['lifecycle_status'], unique=False)
    op.create_index(op.f('ix_containers_type'), 'containers', ['type'], unique=False)
    op.create_index(op.f('ix_containers_status'), 'containers', ['status'], unique=False)
    op.create_index(op.f('ix_container_snapshots_timestamp'), 'container_snapshots', ['timestamp'], unique=False)
    op.create_index(op.f('ix_alerts_container_active'), 'alerts', ['container_id', 'active'], unique=False)
    op.create_index(op.f('ix_alerts_active'), 'alerts', ['active'], unique=False)
    op.create_index(op.f('ix_activity_logs_timestamp'), 'activity_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_activity_logs_container_timestamp'), 'activity_logs', ['container_id', 'timestamp'], unique=False)
    op.drop_index(op.f('ix_recipe_applications_recipe_version_id'), table_name='recipe_applications')
    op.drop_index(op.f('ix_recipe_applications_previous_recipe_version_id'), table_name='recipe_applications')
    op.drop_index(op.f('ix_recipe_applications_id'), table_name='recipe_applications')
    op.drop_index(op.f('ix_recipe_applications_container_id'), table_name='recipe_applications')
    op.drop_table('recipe_applications')
    # ### end Alembic commands ###
