"""Initial migration

Revision ID: 8b57bcd12765
Revises: 
Create Date: 2025-07-08 12:58:56.119714

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8b57bcd12765'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('crop_measurements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('radius', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('area', sa.Float(), nullable=True),
    sa.Column('area_estimated', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crop_measurements_id'), 'crop_measurements', ['id'], unique=False)
    op.create_table('recipe_master',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('crop_type', sa.String(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recipe_master_id'), 'recipe_master', ['id'], unique=False)
    op.create_table('seed_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('variety', sa.String(length=100), nullable=True),
    sa.Column('supplier', sa.String(length=100), nullable=True),
    sa.Column('batch_id', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_seed_types_id'), 'seed_types', ['id'], unique=False)
    op.create_table('tenants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenants_id'), 'tenants', ['id'], unique=False)
    op.create_index(op.f('ix_tenants_name'), 'tenants', ['name'], unique=True)
    op.create_table('containers',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('purpose', sa.String(length=500), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('shadow_service_enabled', sa.Boolean(), nullable=True),
    sa.Column('copied_environment_from', sa.Integer(), nullable=True),
    sa.Column('robotics_simulation_enabled', sa.Boolean(), nullable=True),
    sa.Column('ecosystem_connected', sa.Boolean(), nullable=True),
    sa.Column('ecosystem_settings', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_containers_id'), 'containers', ['id'], unique=False)
    op.create_table('recipe_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('valid_from', sa.DateTime(timezone=True), nullable=False),
    sa.Column('valid_to', sa.DateTime(timezone=True), nullable=True),
    sa.Column('tray_density', sa.Float(), nullable=True),
    sa.Column('air_temperature', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('co2', sa.Float(), nullable=True),
    sa.Column('water_temperature', sa.Float(), nullable=True),
    sa.Column('ec', sa.Float(), nullable=True),
    sa.Column('ph', sa.Float(), nullable=True),
    sa.Column('water_hours', sa.Float(), nullable=True),
    sa.Column('light_hours', sa.Float(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe_master.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recipe_versions_id'), 'recipe_versions', ['id'], unique=False)
    op.create_index(op.f('ix_recipe_versions_recipe_id'), 'recipe_versions', ['recipe_id'], unique=False)
    op.create_table('activity_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('action_type', sa.String(), nullable=True),
    sa.Column('actor_type', sa.String(), nullable=True),
    sa.Column('actor_id', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activity_logs_container_id'), 'activity_logs', ['container_id'], unique=False)
    op.create_index(op.f('ix_activity_logs_id'), 'activity_logs', ['id'], unique=False)
    op.create_table('alerts',
    sa.Column('container_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('related_object', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alerts_id'), 'alerts', ['id'], unique=False)
    op.create_table('container_seed_types',
    sa.Column('container_id', sa.Integer(), nullable=False),
    sa.Column('seed_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.ForeignKeyConstraint(['seed_type_id'], ['seed_types.id'], ),
    sa.PrimaryKeyConstraint('container_id', 'seed_type_id')
    )
    op.create_table('container_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('purpose', sa.String(), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('shadow_service_enabled', sa.Boolean(), nullable=True),
    sa.Column('copied_environment_from', sa.Integer(), nullable=True),
    sa.Column('robotics_simulation_enabled', sa.Boolean(), nullable=True),
    sa.Column('ecosystem_settings', sa.JSON(), nullable=True),
    sa.Column('yield_kg', sa.Float(), nullable=True),
    sa.Column('space_utilization_pct', sa.Float(), nullable=True),
    sa.Column('tray_ids', sa.JSON(), nullable=True),
    sa.Column('panel_ids', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_container_snapshots_container_id'), 'container_snapshots', ['container_id'], unique=False)
    op.create_index(op.f('ix_container_snapshots_id'), 'container_snapshots', ['id'], unique=False)
    op.create_table('crops',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('seed_type_id', sa.Integer(), nullable=True),
    sa.Column('seed_date', sa.Date(), nullable=True),
    sa.Column('transplanting_date_planned', sa.Date(), nullable=True),
    sa.Column('transplanting_date', sa.Date(), nullable=True),
    sa.Column('harvesting_date_planned', sa.Date(), nullable=True),
    sa.Column('harvesting_date', sa.Date(), nullable=True),
    sa.Column('lifecycle_status', sa.String(length=50), nullable=True),
    sa.Column('health_check', sa.String(length=50), nullable=True),
    sa.Column('current_location', sa.JSON(), nullable=True),
    sa.Column('last_location', sa.JSON(), nullable=True),
    sa.Column('measurements_id', sa.Integer(), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('recipe_version_id', sa.Integer(), nullable=True),
    sa.Column('accumulated_light_hours', sa.Float(), nullable=True),
    sa.Column('accumulated_water_hours', sa.Float(), nullable=True),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['measurements_id'], ['crop_measurements.id'], ),
    sa.ForeignKeyConstraint(['recipe_version_id'], ['recipe_versions.id'], ),
    sa.ForeignKeyConstraint(['seed_type_id'], ['seed_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crops_id'), 'crops', ['id'], unique=False)
    op.create_index(op.f('ix_crops_seed_type_id'), 'crops', ['seed_type_id'], unique=False)
    op.create_table('devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('serial_number', sa.String(length=100), nullable=True),
    sa.Column('firmware_version', sa.String(length=50), nullable=True),
    sa.Column('port', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('last_active_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('configuration_settings', sa.JSON(), nullable=True),
    sa.Column('configuration_parameters', sa.JSON(), nullable=True),
    sa.Column('diagnostics_uptime', sa.Float(), nullable=True),
    sa.Column('diagnostics_error_count', sa.Integer(), nullable=True),
    sa.Column('diagnostics_last_error', sa.String(), nullable=True),
    sa.Column('diagnostics_performance_metrics', sa.JSON(), nullable=True),
    sa.Column('connectivity_connection_type', sa.String(), nullable=True),
    sa.Column('connectivity_signal_strength', sa.Float(), nullable=True),
    sa.Column('connectivity_last_heartbeat', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_devices_container_id'), 'devices', ['container_id'], unique=False)
    op.create_index(op.f('ix_devices_id'), 'devices', ['id'], unique=False)
    op.create_table('environment_links',
    sa.Column('container_id', sa.Integer(), nullable=False),
    sa.Column('fa', sa.JSON(), nullable=True),
    sa.Column('pya', sa.JSON(), nullable=True),
    sa.Column('aws', sa.JSON(), nullable=True),
    sa.Column('mbai', sa.JSON(), nullable=True),
    sa.Column('fh', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.PrimaryKeyConstraint('container_id')
    )
    op.create_index(op.f('ix_environment_links_container_id'), 'environment_links', ['container_id'], unique=False)
    op.create_table('metric_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('air_temperature', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('co2', sa.Float(), nullable=True),
    sa.Column('yield_kg', sa.Float(), nullable=True),
    sa.Column('space_utilization_pct', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_metric_snapshots_container_id'), 'metric_snapshots', ['container_id'], unique=False)
    op.create_index(op.f('ix_metric_snapshots_id'), 'metric_snapshots', ['id'], unique=False)
    op.create_table('panels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('rfid_tag', sa.String(length=100), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('utilization_pct', sa.Float(), nullable=True),
    sa.Column('provisioned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('panel_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_panels_container_id'), 'panels', ['container_id'], unique=False)
    op.create_index(op.f('ix_panels_id'), 'panels', ['id'], unique=False)
    op.create_index(op.f('ix_panels_rfid_tag'), 'panels', ['rfid_tag'], unique=True)
    op.create_table('trays',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('rfid_tag', sa.String(length=100), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('utilization_pct', sa.Float(), nullable=True),
    sa.Column('provisioned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('tray_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trays_container_id'), 'trays', ['container_id'], unique=False)
    op.create_index(op.f('ix_trays_id'), 'trays', ['id'], unique=False)
    op.create_index(op.f('ix_trays_rfid_tag'), 'trays', ['rfid_tag'], unique=True)
    op.create_table('crop_history',
    sa.Column('crop_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('event', sa.String(), nullable=True),
    sa.Column('performed_by', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['crop_id'], ['crops.id'], ),
    sa.PrimaryKeyConstraint('crop_id', 'timestamp')
    )
    op.create_index(op.f('ix_crop_history_crop_id'), 'crop_history', ['crop_id'], unique=False)
    op.create_table('crop_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('crop_id', sa.Integer(), nullable=True),
    sa.Column('lifecycle_status', sa.String(), nullable=True),
    sa.Column('health_status', sa.String(), nullable=True),
    sa.Column('recipe_version_id', sa.Integer(), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('measurements_id', sa.Integer(), nullable=True),
    sa.Column('accumulated_light_hours', sa.Float(), nullable=True),
    sa.Column('accumulated_water_hours', sa.Float(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['crop_id'], ['crops.id'], ),
    sa.ForeignKeyConstraint(['measurements_id'], ['crop_measurements.id'], ),
    sa.ForeignKeyConstraint(['recipe_version_id'], ['recipe_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crop_snapshots_crop_id'), 'crop_snapshots', ['crop_id'], unique=False)
    op.create_index(op.f('ix_crop_snapshots_id'), 'crop_snapshots', ['id'], unique=False)
    op.create_table('device_health_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('uptime_hours', sa.Float(), nullable=False),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('performance_score', sa.Float(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_health_history_id'), 'device_health_history', ['id'], unique=False)
    op.create_table('panel_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('panel_id', sa.Integer(), nullable=True),
    sa.Column('rfid_tag', sa.String(), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('crop_count', sa.Integer(), nullable=True),
    sa.Column('utilization_percentage', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.ForeignKeyConstraint(['panel_id'], ['panels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_panel_snapshots_container_id'), 'panel_snapshots', ['container_id'], unique=False)
    op.create_index(op.f('ix_panel_snapshots_id'), 'panel_snapshots', ['id'], unique=False)
    op.create_index(op.f('ix_panel_snapshots_panel_id'), 'panel_snapshots', ['panel_id'], unique=False)
    op.create_table('tray_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('tray_id', sa.Integer(), nullable=True),
    sa.Column('rfid_tag', sa.String(), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('crop_count', sa.Integer(), nullable=True),
    sa.Column('utilization_percentage', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['container_id'], ['containers.id'], ),
    sa.ForeignKeyConstraint(['tray_id'], ['trays.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tray_snapshots_container_id'), 'tray_snapshots', ['container_id'], unique=False)
    op.create_index(op.f('ix_tray_snapshots_id'), 'tray_snapshots', ['id'], unique=False)
    op.create_index(op.f('ix_tray_snapshots_tray_id'), 'tray_snapshots', ['tray_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tray_snapshots_tray_id'), table_name='tray_snapshots')
    op.drop_index(op.f('ix_tray_snapshots_id'), table_name='tray_snapshots')
    op.drop_index(op.f('ix_tray_snapshots_container_id'), table_name='tray_snapshots')
    op.drop_table('tray_snapshots')
    op.drop_index(op.f('ix_panel_snapshots_panel_id'), table_name='panel_snapshots')
    op.drop_index(op.f('ix_panel_snapshots_id'), table_name='panel_snapshots')
    op.drop_index(op.f('ix_panel_snapshots_container_id'), table_name='panel_snapshots')
    op.drop_table('panel_snapshots')
    op.drop_index(op.f('ix_device_health_history_id'), table_name='device_health_history')
    op.drop_table('device_health_history')
    op.drop_index(op.f('ix_crop_snapshots_id'), table_name='crop_snapshots')
    op.drop_index(op.f('ix_crop_snapshots_crop_id'), table_name='crop_snapshots')
    op.drop_table('crop_snapshots')
    op.drop_index(op.f('ix_crop_history_crop_id'), table_name='crop_history')
    op.drop_table('crop_history')
    op.drop_index(op.f('ix_trays_rfid_tag'), table_name='trays')
    op.drop_index(op.f('ix_trays_id'), table_name='trays')
    op.drop_index(op.f('ix_trays_container_id'), table_name='trays')
    op.drop_table('trays')
    op.drop_index(op.f('ix_panels_rfid_tag'), table_name='panels')
    op.drop_index(op.f('ix_panels_id'), table_name='panels')
    op.drop_index(op.f('ix_panels_container_id'), table_name='panels')
    op.drop_table('panels')
    op.drop_index(op.f('ix_metric_snapshots_id'), table_name='metric_snapshots')
    op.drop_index(op.f('ix_metric_snapshots_container_id'), table_name='metric_snapshots')
    op.drop_table('metric_snapshots')
    op.drop_index(op.f('ix_environment_links_container_id'), table_name='environment_links')
    op.drop_table('environment_links')
    op.drop_index(op.f('ix_devices_id'), table_name='devices')
    op.drop_index(op.f('ix_devices_container_id'), table_name='devices')
    op.drop_table('devices')
    op.drop_index(op.f('ix_crops_seed_type_id'), table_name='crops')
    op.drop_index(op.f('ix_crops_id'), table_name='crops')
    op.drop_table('crops')
    op.drop_index(op.f('ix_container_snapshots_id'), table_name='container_snapshots')
    op.drop_index(op.f('ix_container_snapshots_container_id'), table_name='container_snapshots')
    op.drop_table('container_snapshots')
    op.drop_table('container_seed_types')
    op.drop_index(op.f('ix_alerts_id'), table_name='alerts')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_activity_logs_id'), table_name='activity_logs')
    op.drop_index(op.f('ix_activity_logs_container_id'), table_name='activity_logs')
    op.drop_table('activity_logs')
    op.drop_index(op.f('ix_recipe_versions_recipe_id'), table_name='recipe_versions')
    op.drop_index(op.f('ix_recipe_versions_id'), table_name='recipe_versions')
    op.drop_table('recipe_versions')
    op.drop_index(op.f('ix_containers_id'), table_name='containers')
    op.drop_table('containers')
    op.drop_index(op.f('ix_tenants_name'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_id'), table_name='tenants')
    op.drop_table('tenants')
    op.drop_index(op.f('ix_seed_types_id'), table_name='seed_types')
    op.drop_table('seed_types')
    op.drop_index(op.f('ix_recipe_master_id'), table_name='recipe_master')
    op.drop_table('recipe_master')
    op.drop_index(op.f('ix_crop_measurements_id'), table_name='crop_measurements')
    op.drop_table('crop_measurements')
    # ### end Alembic commands ###
